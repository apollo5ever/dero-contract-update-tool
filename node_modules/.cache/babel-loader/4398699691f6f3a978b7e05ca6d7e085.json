{"ast":null,"code":"import { nanoid } from \"nanoid\";\nexport default class DeroBridgeApi {\n  constructor() {\n    this.channel = new MessageChannel();\n    this.initialized = false;\n    this.resolves = /* @__PURE__ */new Map();\n  }\n\n  call(cmd) {\n    if (!this.initialized) return Promise.reject(new Error(`Not initialized.`));\n    const id = nanoid();\n    const msg = {\n      id,\n      cmd\n    };\n    const promise = new Promise((resolve, reject) => {\n      const onMessage = event => {\n        if (event.data === \"disconnected\") {\n          this.initialized = false;\n          reject(event);\n        } else if (event.data.id === id) {\n          const {\n            err,\n            data\n          } = event.data;\n          if (data) resolve(data);else if (err) reject(err);else reject(new Error(`Empty event.`));\n          this.channel.port1.removeEventListener(\"message\", onMessage);\n        }\n      };\n\n      this.channel.port1.addEventListener(\"message\", onMessage);\n      this.channel.port1.start();\n    });\n    this.channel.port1.postMessage(msg);\n    return promise;\n  }\n\n  daemon(action, args) {\n    return this.call({\n      entity: \"daemon\",\n      action,\n      args\n    });\n  }\n\n  wallet(action, args) {\n    return this.call({\n      entity: \"wallet\",\n      action,\n      args\n    });\n  }\n\n  init() {\n    if (this.initialized) return Promise.reject(new Error(`Already initialized.`));\n    return new Promise((resolve, reject) => {\n      let timeoutId = setTimeout(() => {\n        if (!this.initialized) reject(new Error(`Can't initialized.`));\n      }, 1e3);\n      this.channel.port1.addEventListener(\"message\", event => {\n        if (event.data === \"initialized\") {\n          this.initialized = true;\n          resolve();\n        } else {\n          clearTimeout(timeoutId);\n          reject(new Error(`Can't initialized.`));\n        }\n      }, {\n        once: true\n      });\n      this.channel.port1.start();\n      window.postMessage(\"init-dero-bridge\", \"*\", [this.channel.port2]);\n    });\n  }\n\n}","map":{"version":3,"names":["nanoid","DeroBridgeApi","constructor","channel","MessageChannel","initialized","resolves","Map","call","cmd","Promise","reject","Error","id","msg","promise","resolve","onMessage","event","data","err","port1","removeEventListener","addEventListener","start","postMessage","daemon","action","args","entity","wallet","init","timeoutId","setTimeout","clearTimeout","once","window","port2"],"sources":["/home/josho/Dero/dero-contract-code-update-dapp/node_modules/dero-rpc-bridge-api/dist/index.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\nexport default class DeroBridgeApi {\n  constructor() {\n    this.channel = new MessageChannel();\n    this.initialized = false;\n    this.resolves = /* @__PURE__ */ new Map();\n  }\n  call(cmd) {\n    if (!this.initialized)\n      return Promise.reject(new Error(`Not initialized.`));\n    const id = nanoid();\n    const msg = { id, cmd };\n    const promise = new Promise((resolve, reject) => {\n      const onMessage = (event) => {\n        if (event.data === \"disconnected\") {\n          this.initialized = false;\n          reject(event);\n        } else if (event.data.id === id) {\n          const { err, data } = event.data;\n          if (data)\n            resolve(data);\n          else if (err)\n            reject(err);\n          else\n            reject(new Error(`Empty event.`));\n          this.channel.port1.removeEventListener(\"message\", onMessage);\n        }\n      };\n      this.channel.port1.addEventListener(\"message\", onMessage);\n      this.channel.port1.start();\n    });\n    this.channel.port1.postMessage(msg);\n    return promise;\n  }\n  daemon(action, args) {\n    return this.call({ entity: \"daemon\", action, args });\n  }\n  wallet(action, args) {\n    return this.call({ entity: \"wallet\", action, args });\n  }\n  init() {\n    if (this.initialized)\n      return Promise.reject(new Error(`Already initialized.`));\n    return new Promise((resolve, reject) => {\n      let timeoutId = setTimeout(() => {\n        if (!this.initialized)\n          reject(new Error(`Can't initialized.`));\n      }, 1e3);\n      this.channel.port1.addEventListener(\"message\", (event) => {\n        if (event.data === \"initialized\") {\n          this.initialized = true;\n          resolve();\n        } else {\n          clearTimeout(timeoutId);\n          reject(new Error(`Can't initialized.`));\n        }\n      }, { once: true });\n      this.channel.port1.start();\n      window.postMessage(\"init-dero-bridge\", \"*\", [this.channel.port2]);\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}